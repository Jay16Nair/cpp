#include <iostream>

using namespace std;

int partition(int arr[],int s ,int e){
    int pivot=arr[s];
    
    int count=0; //To count no.of elements smaller than the pivot so that pivot can be put in right index 
    
    for(int i=s+1;i<=e;i++){
        if(arr[i]<=pivot){
            count++;
        }
    }
    
    //place pivot at the right index
    int pivotIndex=s+count;
    
    int temp=arr[s];
    arr[s]=arr[pivotIndex];
    arr[pivotIndex]=temp;
    
    //left and right subarray
    
    int i=s,j=e;
    
    while(i<pivotIndex && j>pivotIndex){
        
        while(arr[i]<pivot){
            i++;
        }
        while(j>pivot){
            j--;
        }
        if(i<pivotIndex && j>pivotIndex){
            int temp=arr[i];
            arr[i]=arr[j];
            arr[j]=temp;
        }
        
    }
    
    return pivotIndex;
}

void quickSort(int arr[],int s,int e){
    if(s>=e){
        return;
    }
    int pidx=partition(arr,s,e);
    
    //left subarray sort
    quickSort(arr,s,pidx-1);
    
    //right subarray sort
    quickSort(arr,pidx+1,e);
}

int main()
{
    int arr[10]={10,9,8,7,6,5,4,3,2,1};
    
    quickSort(arr,0,10);
    
    for(int i=0;i<10;i++){
        cout<<arr[i]<<" ";
    }

    return 0;
}
